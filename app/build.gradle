apply plugin: 'com.android.application'
apply plugin: 'checkstyle'

checkstyle {
    toolVersion rootProject.checkstyleVersion
}

task checkstyle(type: Checkstyle) {
    configFile file("${project.rootDir}/checkstyle.xml")
    source "${project.rootDir}/app/src/main/java"
    classpath = files()
}
preBuild.dependsOn 'checkstyle'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "uk.co.markomeara.whitbread"
        minSdkVersion 19
        targetSdkVersion 25
        multiDexEnabled true
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "FOURSQUARE_API_BASE", '"https://api.foursquare.com/v2/"')
        buildConfigField("String", "FOURSQUARE_API_VERSION", '"20170609"')
        buildConfigField("String", "PUBLIC_API_KEY", '"J2O5CYJWEZ4VHVKYUZ1NENRESRGURME3NKS0F1R05HWOKJO2"')
        buildConfigField("String", "PRIVATE_API_KEY", '"EBQZFPMGGRUDZHXQC33PL5BDN3ALGL0AF1ZCDBPGHJUTSIS5"')
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    compile("com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion") {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }
    compile "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpVersion"
    compile("com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion") {
        exclude group: 'com.squareup.okio', module: 'okio'
    }
    compile "com.squareup.okio:okio:$rootProject.okioVersion"

    compile "com.google.dagger:dagger:$rootProject.daggerVersion"
    compile "com.jakewharton:butterknife:$rootProject.butterknifeVersion"
    compile "com.android.support:multidex:$rootProject.multidexVersion"

    compile "io.reactivex.rxjava2:rxjava:$rootProject.rxJavaVersion"
    compile "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"
    compile ("com.google.guava:guava:$rootProject.guavaVersion") {
        exclude group: 'com.google.code.findbugs'
    }
    compile "com.squareup.picasso:picasso:$rootProject.picassoVersion"

    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"

    androidTestCompile("com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile("com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile "com.squareup.okhttp3:mockwebserver:$rootProject.okhttpVersion"
    androidTestCompile ("com.jakewharton.espresso:okhttp3-idling-resource:$rootProject.okHttpIdlingResourceVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile "junit:junit:$rootProject.jUnitVersion"
    testCompile "org.mockito:mockito-all:$rootProject.mockitoVersion"
}

apply plugin: 'me.tatarka.retrolambda'
