<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">
<module name="Checker">
    <module name="TreeWalker">
        <!-- Use spaces for indentation. There must be no whitespace on line starts -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="^ *\t+"/>
            <property name="message" value="Indents must use spaces"/>
            <property name="ignoreComments" value="true"/>
        </module>

        <!--  Each annotation should be on a separate line-->
        <module name="AnnotationLocation">
            <property name="allowSamelineSingleParameterlessAnnotation" value="false"/>
        </module>
        <module name="AnnotationUseStyle"/>

        <module name="DeclarationOrderCheck">
            <property name="ignoreConstructors" value="true"/>
        </module>

        <module name="ModifierOrderCheck"/>

        <!-- Constants (i.e. static final fields) must be UPPER_CASE -->
        <module name="ConstantName"/>

        <!-- There must be no redundant and unused imports -->
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

        <!-- Local variables must be camelCase and start with a lower-case letter -->
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>

        <!-- Method names must be camelCase and start with a lower-case letter -->
        <module name="MethodName"/>

        <!-- Package name must be lower_case -->
        <module name="PackageName"/>

        <!-- Parameter name must be camelCase and start with a lower-case letter -->
        <module name="ParameterName"/>

        <!-- Class, interface, enum, and annotation names must be CamelCase -->
        <module name="TypeName"/>

        <!-- Do not use package.name.* except of in test code -->
        <module name="AvoidStarImport">
            <property name="allowStaticMemberImports" value="true"/>
        </module>

        <!-- Do not add whitespace between method identifier and opening brace. E.g.:
         void foo() => correct
         void foo () => incorrect -->
        <module name="MethodParamPad"/>

        <!-- There must be no whitespace after:
          bitwise complement (~) operator. E.g. ~flags
          logical complement (!) operator. E.g. !flag
          prefix decrement operator
          dot operator
          prefix increment operator
          unary minus operator. E.g. int x = -5;
          unary plus operator. E.g. int x = +5;
          -->
        <module name="NoWhitespaceAfter">
            <property name="tokens" value="BNOT,DEC,DOT,INC,LNOT,UNARY_MINUS,UNARY_PLUS"/>
        </module>

        <!-- There must be a whitespace after a cast. E.g.:
         int x = (int) y; => correct
         int x = (int)y; => incorrect -->
        <module name="TypecastParenPad"/>

        <!-- All code blocks must be in braces. Opening brace must be on the same line -->
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>

        <!-- If you override equals() also override hashCode() -->
        <module name="EqualsHashCode"/>

        <!-- 'default' must be the last block in switch -->
        <module name="DefaultComesLast"/>

        <!-- Member variables must be in camelCase with no prefix -->
        <module name="MemberName">
            <property name="format" value="^[a-z]{2,}([A-Za-z0-9]*)$"/>
        </module>

        <!-- Static member variables (non final) must be in CamelCase with no prefix -->
        <module name="StaticVariableName">
            <property name="format" value="^[a-z]{2,}([A-Za-z0-9]*)$"/>
        </module>

        <!-- If you overload equals() method you must also override Object.equals() -->
        <module name="CovariantEquals"/>

        <!-- Nested (inner) classes/interfaces must be declared at the bottom of the class after all method and field declarations -->
        <module name="InnerTypeLast"/>

        <!-- Use @Override annotation when overriding a method -->
        <module name="MissingOverride"/>

        <!-- Checkstyle internal stuff -->
        <module name="FileContentsHolder"/>
    </module>

    <!-- If you have a good reason not to follow one of the rules above,
    surround the non-compliant code with comments CSOFF: {rule name} ... CSON: {rule name} -->
    <module name="SuppressionCommentFilter">
        <property name="offCommentFormat" value="CSOFF\: ([\w\|]+)"/>
        <property name="onCommentFormat" value="CSON\: ([\w\|]+)"/>
    </module>
</module>